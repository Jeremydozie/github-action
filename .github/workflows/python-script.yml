#name: Run Python Script
#
#on:
#  push:
#    branches:
#      - main  # Adjust this to your main branch name
#
#jobs:
#  run-python-script:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Set up Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.8  # Adjust to your desired Python version
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt # If you have a requirements file
#
#    - name: Run Python script
#      run: python app.py





# Build, scan using trivy and push to ECR

#name: Build and Push Docker Image to ECR
#
#on:
#  push:
#    branches:
#      - main  # Adjust this to your main branch name
#
#jobs:
#  build-scan-and-push:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: us-east-1  # Adjust this to your desired AWS region
#
#    - name: Build Docker image
#      run: |
#        docker build -t jaydox:latest .
#        docker tag jaydox:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/jaydox:latest
#
#    - name: Install Trivy
#      run: |
#        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
#
#  
#    - name: Test Docker image vulnerabilities with Trivy
#      run: |
#        trivy image ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/jaydox:latest         
#
#    - name: Log in to Amazon ECR
#      run: |
#        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
#
#    - name: Push Docker image to ECR
#      run: |
#        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/jaydox:latest
#





# Build, scan using synk and push to ECR


name: Build and Push Docker Image to ECR

on:
  push:
    branches-ignore:
      - main  # Adjust this to your main branch name

env:  # Define environment variables for the job
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}


jobs:
  build-scan-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

# Another way of adding env variable; but soon to be deprecated 

#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: us-east-1  # Adjust this to your desired AWS region

    - name: Build Docker image
      run: |
        docker build -t jaydox:latest .
        docker tag jaydox:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/jaydox:latest

    - name: Install Snyk CLI
      run: |
        npm install -g snyk

    - name: Authenticate Snyk CLI
      run: |
        snyk auth $SNYK_TOKEN
#  
#    - name: Test Docker image vulnerabilities with Snyk
#      run: |
#        snyk test --docker ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/jaydox:latest
#        
    - name: Test Python file vulnerabilities with Snyk
      run: |
        pip install -r requirements.txt
        snyk test --all-projects --project-type=pip
#        snyk test --all-projects --project-type=pip --severity-threshold=high


    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com


    - name: Push Docker image to ECR
      run: |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/jaydox:latest
        
        

